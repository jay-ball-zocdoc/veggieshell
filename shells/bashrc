# Veggieshell bashrc

#echo bashrc
# if we've already run bashrc, don't do it again!	see veggieres alias below.
if [ ! -z "$veggie_bashrc_did_run" ]; then
	return
fi

VEGGIE_HOME="$HOME/.veggieshell"
export VEGGIE_HOME

# first, source system stuff, it's sometimes useful
if [ -e /etc/bashrc ]; then
    . /etc/bashrc
fi

# set this now, so that prePATH and such work on rsh and non-interactive shells
shopt -s expand_aliases

# set the machine arch - needed for cygwin's annoying c:\ stuff
source "$VEGGIE_HOME/shells/boot/set-arch.sh"

# load prePATH postPATH functions, since we use them during the boot
source "$VEGGIE_HOME/shells/boot/paths.sh"

# some systems (osx/redhat) do not define MANPATH and let man itself have
# defaults.  but, when we append MANPATH, man only reads $MANPATH and
# ignores the implicit defaults.  dumb.  so, save the trouble and set an
# initial path.
if [ -z "$MANPATH" ]; then
	for i in /usr/local/man  /usr/man  /usr/share/man  /man ; do
		if [ -d "$i" ]; then
			postMAN "$i"
		fi
	done
fi

# save the original path. the veggieres alias will re-read the bashrc.  but,
# the path can get expanded to huge lengths causing errors, so save orig!
veggie_originalpath="$PATH"
veggie_originalmanpath="$MANPATH"
veggie_bashrc_did_run=1
alias veggieres='unset veggie_bashrc_did_run; export PATH="$veggie_originalpath" MANPATH="$veggie_originalmanpath"; source "$HOME"/.bashrc'

# Now that we have the original paths saved, we can start appending it

# add /ulb to path, since init scripts may need it.
prePATH /usr/local/bin

# add Veggieshell's script dir
if [ -d "$VEGGIE_HOME/scripts" ]; then
	#prePATH `cyg_path_munge "$VEGGIE_HOME/scripts"`
	#prePATH "$VEGGIE_HOME/scripts"
	#PATH="`cyg_path_munge "$VEGGIE_HOME/scripts"`:$PATH"
	PATH="$VEGGIE_HOME/scripts:$PATH"
fi
# add your personal binaries and scripts to your path, at the very beginning
if [ -d "$VEGGIE_HOME/$VEGGIE_ARCH/bin" ]; then
	#prePATH "$VEGGIE_HOME/$VEGGIE_ARCH/bin"
	#PATH="`cyg_path_munge "$VEGGIE_HOME/$VEGGIE_ARCH/bin"`:$PATH"
	PATH="$VEGGIE_HOME/$VEGGIE_ARCH/bin:$PATH"
fi

postPATH /sbin /usr/sbin

if [ "$VEGGIE_ARCH" = "sun" ]; then
	postPATH /opt/SUNWspro/bin /usr/ccs/bin /usr/openwin/bin
	postMAN /usr/dt/man /usr/openwin/man /opt/SUNWspro/man
elif [ "$VEGGIE_ARCH" = "osx" ]; then
	postPATH /usr/X11R6/bin
	if [ -d "/sw/bin" ]; then
		# fink
		prePATH /sw/bin	
        source /sw/bin/init.sh
	fi
	if [ -d "/opt/local/bin" ]; then
		# DarwinPorts or MacPorts
		prePATH /opt/local/bin
		preMAN /opt/local/man
	fi
fi


# we are coders, we wants cores
#ulimit -HSc unlimited

# unset auto-logout and all limits
unset TMOUT
ulimit -t unlimited

# default xterm-ish program used by aliases, override in personal bashrc
veggie_xterm="rxvt"

# default PS1 prompt, override in personal bashrc
PS1='[\u@\h \W]\$ '


# Not all hostname programs are created equal, some return FQDN, others just hostname.
# We cannot always trust bash's $HOSTNAME.  See historial/set-hostname.sh for complaints.
veggie_hostname=`hostname -s`

# netname is no longer used - it cannot reliable be determined on some
# Linux and OS X installs.  Too much DHCP screws it up.


#
# set some fun shell behaviour
#

# newer redhat's have the "feature" of doing case insensitive sorts when
# you use ls.  talk about annoying, now Makefile and CVS and README.html
# are buried in the middle of your files.  this (i hope) shuts that off.
# TODO does not appear to work 
shopt -u nocaseglob

# another "feature" of redhat is to kill all background jobs when you
# exit the shell (or kill the xterm).  what bash is doing is sending a
# hup, for most things, is a death knoll.  this shuts (i hope again)
# that off too. TODO test me more!
shopt -u huponexit

# this allows 'cd ORACLE_HOME' to work like 'cd $ORACLE_HOME'.  also try
# apa=/usr/local/apache-1.3.19 followed with cd apa , etc...
shopt -s cdable_vars

# this is dangerous - shut off.  "source file.sh" will search PATH for
# file.sh.  if you're sourcing something, know where it is, use ./file.sh
shopt -u sourcepath

# correct minor spelling errors when doing "cd directoyr_name" (fixes y|r)
shopt -s cdspell

# this makes multi-line command lines become one line when hitting the
# up arrow.  nice for if[..];then and cvs commit -m 'blah\nblah\n'
# crtl J means a newline in the output, fyi.
command_oriented_history=1

### Aliases and Functions
#
# Now, load up the rest of the config files:
#   1.	Personal bashrc
#	2.	Host-specific bashrc
#	3.	Veggieshell aliases and functions in shells/aliases/*.sh
#   3Â½  Items related to command line GUI interaction shells/cmdgui/*.sh
#	4.	Personal aliases
#	5.	Host-specific aliases
#
for i in \
		$VEGGIE_HOME/personal/shells/bashrc \
		$VEGGIE_HOME/personal/shells/hosts/$veggie_hostname-bashrc \
		\
		$VEGGIE_HOME/shells/aliases/*.sh \
        $VEGGIE_HOME/shells/cmdgui/*.sh \
		$VEGGIE_HOME/personal/shells/aliases/*.sh \
		$VEGGIE_HOME/personal/shells/hosts/$veggie_hostname-aliases \
	; do
	if [ -f "$i" ]; then
		source "$i"
	fi
done

### Completions
#
# bash < 2.05 does not have 'complete -A users'
# bash < 2.04 does not have 'complete -o'
# bash < 2.03 does not have the complete command, at all
# so just ignore all completions if bash version less than 2.05
if [ \( ${BASH_VERSINFO[0]}  -gt 2 \) -o		\
	\( \( ${BASH_VERSINFO[0]}  -eq 2 \) -a \( ${BASH_VERSINFO[1]} -ge 5 \) \) ]; then

	for i in \
			$VEGGIE_HOME/shells/completions/*.sh \
			$VEGGIE_HOME/shells/completions/*.bash \
			$VEGGIE_HOME/personal/shells/completions/*.sh \
			$VEGGIE_HOME/personal/shells/completions/*.bash \
			$VEGGIE_HOME/personal/shells/hosts/$veggie_hostname-completions \
		; do
		if [ -f "$i" ]; then
			source "$i"
		fi
	done
fi

# vim:ts=4:et:sw=4:syntax=sh
